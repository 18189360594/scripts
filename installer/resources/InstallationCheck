#!/usr/bin/perl
use File::Find;

my $result = 0, $basedir = "/sw";
my $PACKAGE_PATH = $ENV{PACKAGE_PATH};

DO_CHECKS:
{
	# The "19" specifies the index of the localized error string in
	# {English,Spanish,etc}.lproj/InstallationCheck.strings
	print "running InstallationCheck...\n";
	if ((-e "$basedir") || (-l "$basedir"))
	{
	  print "Fink Installer: ROOT /sw exists!\n";
	  $result = ((1 << 6) | (1 << 5) | 19);
  	  last;
	} 

	$TargetSystemBuild = GetPathEntry("/System/Library/CoreServices/SystemVersion.plist", "ProductBuildVersion");
#6C35
#6C115
#7B85
	if ($TargetSystemBuild lt "8A428")
	{
	print "Fink Installer: Fink requires Mac OS X 10.4 (Tiger) or later! Bailing out..\n";
       	$result = ((1 << 6) | (1 << 5) | 20);
        last;
	}
}

exit $result;



##################

sub InfoPlistCheck
{
    my $path		= $_[0];
    my $entry		= $_[1];
    my $version		= $_[2];
    my $operator	= $_[3];

    if (!$operator)
    {
        $operator = "==";
    }

    @cfBundleVersionArray = split(/\./, GetPathEntry($path,$entry));
    for ($i = 0; $i < 3; $i++) {
        if(!$cfBundleVersionArray[$i]) {
            $cfBundleVersionArray[$i] = '0';
        }
    }

    @versionArray = split(/\./, $version);
    
    my $actualVersion;

    for ($i = 0; $i < 3; $i++) {
        if (($cfBundleVersionArray[$i] != $versionArray[$i]) or ($i == 2)) {

            $actualVersion = $cfBundleVersionArray[$i];
            $version = $versionArray[$i];

            last;
        }
    }

    my $expression = '$actualVersion ' . $operator . ' $version';

    if( eval ($expression) )
    {
        return 1;
    }
    else
    {
        return 0;
    }

}

##################
sub GetPathEntry
{
    my $path		= $_[0];
    my $entry		= $_[1];

    my $oldSeperator = $/;
    $/ = \0;

    open( PLIST, "$path") || do {
        return 0;
    };

    $plistData = <PLIST>;
    $plistData =~ /<dict>(.*?)<\/dict>/gis;

    @items = split(/<key>/, $plistData);

    shift @items;
    foreach $item (@items) {
        $item =~ /(.*?)<\/key>.*?<string>(.*?)<\/string>/gis;
        $versiondata{ $1 } = $2;
    }

    close(PLIST);

    $/ = $oldSeperator;

    return $versiondata{$entry};
 }


