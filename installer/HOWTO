NOTE: as of 1 June 2005, the buildpkg.sh script is not likely to work with
versions of OS X prior to 10.3.  If necessary, older versions of buildpkg.sh
can be obtained from CVS.

Setup environment variables: 
 IN_VERSION is the version of fink you want to install, as a numerical
 triplet value such as 0.4.5

 IN_BASEDIR is the directory containing this script (full pathname, with
 no trailing slash).  You are going to need /sw to be clear for this 
 installation, so if you move /sw to another location such as /sw.orig, 
 be sure to reset IN_BASEDIR to the correct value. IN_BASEDIR should
 not contain any spaces, quotes, or metachars.

Step 1:
 Clear out /sw so that a fresh version can be installed there.

Step 2:
 Download fink-IN_VERSION-full.tar.gz from sourceforge (or use the copy
 you generated when building the srcdist), unpack it and run "./bootstrap.sh",
 installing into /sw.  Accept all default choices during configuration.

Step 3:
 Run "/sw/bin/fink update-all" in case there were updates to base-packages 
 since the last package manager release.

Step 4:
 Remove all .deb's in  /sw/fink/dists/crypto/binary-darwin-powerpc/ and
 /sw/fink/dists/main/binary-darwin-powerpc/* , and then remove all symlinks
 from /sw/fink/debs - you can do this by doing:
 "sudo find /sw/fink -name '*.deb' -exec rm -rf {} \;"

Step 5:
 Remove /sw/src/*

Step 6:
 Run "/sw/bin/fink scanpackages", and then "sudo /sw/bin/apt-get update" to 
 properly prepare for distribution. 

Step6a:
 Run "/sw/bin/fink list --installed" to be ready with the information when 
 needed in step 8.

Step 6b:
 Check permissions in your /sw directory to verify things are world-readable 
 when appropriate

Step 6c:
 Run "chmod 1755 IN_BASEDIR/contents" to get the permissions of the 
 "contents" directory to match those of / on the target machine.

Step 7:
 Move the entire /sw directory into a subdirectory of IN_BASEDIR/contents 
 (that is, you should have a directory IN_BASEDIR/contents/sw/ when you are 
 finished).

Step 7a:
 Update the copy of FinkCommander in IN_BASEDIR/dmg to the latest version.

Step 8.
 Use TextEdit to examine the files in the resources and dmg subdirs of this
 directory, editing if necessary. You will need to edit the list of 
 installed packages which appears at the end of resources/ReadMe.rtf. 
 Leave IN_VERSION variables as-is, these will be replaced by script.  
 Additionally you may need to update the InstallationCheck file and
 localized error .strings files to contain the minimum supported system
 version. (eg, 6C115 for 10.2.0) 

 Be sure to clean out any *~ files or other stray files generated during 
 editing.

Step 9.
 Run "sudo ./buildpkg.sh". This should copy the resources and dmg directories,
 subsituting versions in the various read me files. It will then create the
 pkg file in the dmg-IN_VERSION directory. Then, a .dmg will be created and 
 end up in the IN_BASEDIR. The Volume name should be "Fink IN_VERSION Installer". 
 
Step 10.
 Mount and test the .dmg. Send it to someone else to test before release as well.

Step 11.
Commit your revised versions of the .rtf and other files to CVS for the 
benefit of future releases. Tag the CVS with a release tag of the form
release_x_y_z .

That's it, you're done!  
